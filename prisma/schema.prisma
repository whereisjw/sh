// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int         @id @default(autoincrement())
  phone     String?     @unique @db.VarChar(50)
  email     String?     @unique
  name      String
  avatar    String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  tokens    Token[]
  products  Product[]
  Like      Like[]
  Post      Post[]
  Answer    Answer[]
  Wondering Wondering[]
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int

  @@index([userId])
}

model Product {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  category    String   @db.VarChar(20)
  image       String   @db.VarChar(255)
  name        String   @db.VarChar(20)
  price       String   @db.VarChar(20)
  description String   @db.VarChar(200)
  Like        Like[]

  @@index([userId])
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int

  @@index([productId])
  @@index([userId])
}

model Post {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  question  String      @db.MediumText
  lat       Float?
  lng       Float?
  Answer    Answer[]
  Wondering Wondering[]

  @@index([userId])
}

model Answer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  answer    String   @db.MediumText

  @@index([postId])
  @@index([userId])
}

model Wondering {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int

  @@index([postId])
  @@index([userId])
}
